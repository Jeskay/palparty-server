// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  telegramId Int? @unique
  age Int
  name String?
  image String?
  role Role
  email String @unique
  password String
  eventsHosting Event[]
  eventsParticipant UsersOnEvents[]
  comments Comment[]
}

model Event {
  id Int @default(autoincrement()) @id
  name String
  description String?
  shortDescription String?
  images String?
  status Status
  host User @relation(fields: [hostId], references: [id])
  hostId Int
  participants UsersOnEvents[] 
  comments Comment[]
  createdAt DateTime @default(now())
  date DateTime
  groupLink String? @unique
  reposted VerifiedEvent? @relation( fields: [repostedId], references: [id])
  repostedId Int?
}

model UsersOnEvents {
  user User @relation(fields: [userId], references: [id])
  userId Int
  event Event @relation(fields: [eventId], references: [id])
  eventId Int

  @@id([userId, eventId])
}

model Comment {
  id Int @default(autoincrement()) @id
  content String
  event Event @relation(fields: [eventId], references: [id])
  eventId Int
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reactions Int @default(0)
}

model VerifiedEvent {
  id Int @default(autoincrement()) @id
  description String
  name String
  date DateTime
  status Status
  reposts Event[]
}

enum Status {
  ACTIVE
  PREPARING
  WAITING
  PASSED
}

enum Role {
  PERSON
  ORGANIZATION
  ADMIN
}